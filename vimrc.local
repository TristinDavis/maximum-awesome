set nocursorline " don't highlight current line

" keyboard shortcuts
inoremap jj <ESC>

" highlight search
"set hlsearch
"nmap <leader>hl :let @/ = ""<CR>

let base16colorspace=256  " Access colors present in 256 colorspace

" gui settings
if (&t_Co == 256 || has('gui_running'))
  if ($TERM_PROGRAM == 'iTerm.app')
    colorscheme solarized
  else
    colorscheme desert
  endif
endif

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
function! s:RemoveConflictingAlignMaps()
  if exists("g:loaded_AlignMapsPlugin")
    AlignMapsClean
  endif
endfunction
command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
silent! autocmd VimEnter * RemoveConflictingAlignMaps

set backspace=2
syntax enable
set background=dark

colorscheme solarized

" ctrlp ignore
let g:ctrlp_custom_ignore = {
  \ 'dir': '\v(.git|web|cache|vendor|node_modules|lib|tmp|bin|var|test|docs|build|_site|Proxy)$',
  \ }

let JSHintUpdateWriteOnly=1

let g:EasyGrepCommand=1

" Python checker
let g:syntastic_python_python_exec = $HOME.'/.pyenv/shims/python3'

" Javascript checker
let g:syntastic_javascript_checkers = ['jshint', 'jslint']

" Group error
let g:syntastic_aggregate_errors = 1

" highlight ColorColumn guibg=Grey14
let &colorcolumn="80,120,200"

" Hardtime
let g:hardtime_default_on = 1
nmap <F8> :TagbarToggle<CR>

" List all ctag matches for the word under the cursor
map <leader>J :CtrlPTag<CR><C-\>w

nnoremap <leader>] :tab split<CR>:exec("tag ".expand("<cword>"))<CR>

noremap <leader>i :s/^/\

autocmd BufWritePost *
      \ if filereadable('tags') |
      \   call system('ctags -a '.expand('%')) |
      \ endif
